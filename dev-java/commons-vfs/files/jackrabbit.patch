diff --git a/src/main/java/org/apache/commons/vfs2/provider/webdav/ExceptionConverter.java b/src/main/java/org/apache/commons/vfs2/provider/webdav/ExceptionConverter.java
index 122feb02..33783bb3 100644
--- a/src/main/java/org/apache/commons/vfs2/provider/webdav/ExceptionConverter.java
+++ b/src/main/java/org/apache/commons/vfs2/provider/webdav/ExceptionConverter.java
@@ -23,6 +23,7 @@ import org.apache.jackrabbit.webdav.DavConstants;
 import org.apache.jackrabbit.webdav.DavException;
 import org.apache.jackrabbit.webdav.client.methods.DavMethod;
 import org.apache.jackrabbit.webdav.xml.DomUtil;
+import org.apache.jackrabbit.webdav.xml.DavDocumentBuilderFactory;
 import org.w3c.dom.Element;
 
 /**
@@ -49,7 +50,7 @@ public final class ExceptionConverter
         {
             try
             {
-                final Element error = davExc.toXml(DomUtil.BUILDER_FACTORY.newDocumentBuilder().newDocument());
+                final Element error = davExc.toXml((new DavDocumentBuilderFactory()).newDocumentBuilder().newDocument());
                 if (DomUtil.matches(error, DavException.XML_ERROR, DavConstants.NAMESPACE))
                 {
                     if (DomUtil.hasChildElement(error, "exception", null))
diff --git a/src/main/java/org/apache/commons/vfs2/provider/webdav/WebdavFileObject.java b/src/main/java/org/apache/commons/vfs2/provider/webdav/WebdavFileObject.java
index 92dc0699..387d758d 100644
--- a/src/main/java/org/apache/commons/vfs2/provider/webdav/WebdavFileObject.java
+++ b/src/main/java/org/apache/commons/vfs2/provider/webdav/WebdavFileObject.java
@@ -317,21 +317,13 @@ public class WebdavFileObject extends HttpFileObject<WebdavFileSystem>
             final URLFileName fileName = (URLFileName) getName();
             DavPropertySet properties = getProperties(fileName, DavConstants.PROPFIND_ALL_PROP,
                     new DavPropertyNameSet(), false);
-            @SuppressWarnings("unchecked") // iterator() is documented to return DavProperty instances
-            final
-            Iterator<DavProperty> iter = properties.iterator();
-            while (iter.hasNext())
+            for(DavProperty property: properties)
             {
-                final DavProperty property = iter.next();
                 attributes.put(property.getName().toString(), property.getValue());
             }
             properties = getPropertyNames(fileName);
-            @SuppressWarnings("unchecked") // iterator() is documented to return DavProperty instances
-            final
-            Iterator<DavProperty> iter2 = properties.iterator();
-            while (iter2.hasNext())
+            for(DavProperty property: properties)
             {
-                DavProperty property = iter2.next();
                 if (!attributes.containsKey(property.getName().getName()))
                 {
                     property = getProperty(fileName, property.getName());
