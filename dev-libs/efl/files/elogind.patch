diff --git a/configure.ac b/configure.ac
index e9e999bfdb..8e2ef2a3c9 100644
--- a/configure.ac
+++ b/configure.ac
@@ -761,7 +761,10 @@ else
 	[have_systemd_user_session="yes"], [have_systemd_user_session="no"])
 
   if test "$want_systemd" = "yes" -a "$have_systemd_user_session" = "no"; then
-     AC_MSG_ERROR([systemd support wanted, but systemd was not found.])
+    PKG_CHECK_MODULES([SYSTEMD], [libelogind >= 0.29])
+    if test "$want_libelogind" = "yes"; then
+       AC_MSG_ERROR([systemd support wanted, but systemd/elogind was not found.])
+    fi
   fi
 fi
 
@@ -775,6 +778,14 @@ if test "x${have_systemd_pkg}" = "xauto" -o "x${have_systemd_pkg}" = "xyes"; the
      AC_DEFINE_UNQUOTED([HAVE_SYSTEMD_LOGIN_209],[1],[Defined if systemd >= 209])
    ],
    [have_systemd_pkg="no"])
+   if test "x${have_systemd_pkg}" = "no"; then
+     PKG_CHECK_MODULES([SYSTEMD], [libelogind >= 0.29],
+     [
+       have_systemd_pkg="yes"
+       AC_DEFINE_UNQUOTED([HAVE_SYSTEMD_LOGIN_209],[1],[Defined if libelogind >= 0.29])
+     ],
+     [have_systemd_pkg="no"])
+   fi
 fi
 
 # check for systemd library if requested
@@ -1022,8 +1033,6 @@ AC_DEFINE_IF([EINA_COW_MAGIC_ON],
    [test "x${want_cow_magic}" = "xyes" ],
    [1], [Turn on Eina_Magic in Eina_Cow])
 
-EFL_OPTIONAL_DEPEND_PKG([EINA], [${want_systemd}], [SYSTEMD], [libsystemd])
-
 EFL_EVAL_PKGS([EINA])
 
 ## Examples
@@ -1905,7 +1914,7 @@ if test "x${have_glib}" = "xno"; then
    want_g_main_loop="no"
 fi
 
-EFL_OPTIONAL_DEPEND_PKG([ECORE], [${want_systemd}], [SYSTEMD], [libsystemd])
+EFL_OPTIONAL_DEPEND_PKG([ECORE], [${want_systemd}], [SYSTEMD], [libelogind])
 
 EFL_ADD_FEATURE([ECORE], [systemd-daemon], [${want_systemd}])
 EFL_ADD_FEATURE([ECORE], [glib])
@@ -3255,7 +3264,7 @@ AM_CONDITIONAL([EFL_NET_CONTROL_BACKEND_NONE], [test "${EFL_NET_CONTROL_BACKEND}
 
 EFL_ADD_LIBS([ECORE_CON], [${requirement_nsl} -lm])
 
-EFL_OPTIONAL_DEPEND_PKG([ECORE_CON], [${want_systemd}], [SYSTEMD], [libsystemd])
+EFL_OPTIONAL_DEPEND_PKG([ECORE_CON], [${want_systemd}], [SYSTEMD], [libelogind])
 
 EFL_ADD_FEATURE([ECORE_CON], [local-sockets], [${want_ecore_con_local_sockets}])
 EFL_ADD_FEATURE([ECORE_CON], [abstract-sockets], [${want_ecore_con_abstract_sockets}])
@@ -3941,7 +3950,7 @@ EFL_INTERNAL_DEPEND_PKG([ELPUT], [eina])
 
 EFL_DEPEND_PKG([ELPUT], [LIBINPUT], [libinput >= 1.6.0 xkbcommon >= 0.3.0 libudev])
 
-EFL_OPTIONAL_DEPEND_PKG([ELPUT], [${want_systemd}], [SYSTEMD], [libsystemd])
+EFL_OPTIONAL_DEPEND_PKG([ELPUT], [${want_systemd}], [SYSTEMD], [libelogind])
 EFL_ADD_FEATURE([ELPUT], [systemd-logind], [${want_systemd}])
 
 EFL_ADD_LIBS([ELPUT], [-lm])
diff --git a/src/lib/eina/eina_log.c b/src/lib/eina/eina_log.c
index 549640802e..2ce37e0cd0 100644
--- a/src/lib/eina/eina_log.c
+++ b/src/lib/eina/eina_log.c
@@ -29,7 +29,7 @@
 #include <assert.h>
 #include <errno.h>
 
-#ifdef HAVE_SYSTEMD
+#ifdef HAVE_SYSTEMDD
 # include <systemd/sd-journal.h>
 #endif
 
@@ -1537,7 +1537,7 @@ eina_log_init(void)
       _eina_log_win32_is_console = EINA_TRUE;
 #endif
 
-#ifdef HAVE_SYSTEMD
+#ifdef HAVE_SYSTEMDD
    if (getenv("NOTIFY_SOCKET"))
       _print_cb = eina_log_print_cb_journald;
 #endif
@@ -1562,7 +1562,7 @@ eina_log_init(void)
    // Global log level
    if ((level = getenv(EINA_LOG_ENV_LEVEL)))
       _log_level = atoi(level);
-#ifdef HAVE_SYSTEMD
+#ifdef HAVE_SYSTEMDD
    else if (getenv("NOTIFY_SOCKET") && (_print_cb == eina_log_print_cb_journald))
       _log_level = EINA_LOG_LEVEL_INFO;
 #endif
@@ -2102,7 +2102,7 @@ eina_log_print_cb_journald(const Eina_Log_Domain *d,
                            void *data EINA_UNUSED,
                            va_list args)
 {
-#ifdef HAVE_SYSTEMD
+#ifdef HAVE_SYSTEMDD
    char *file_prefixed = NULL;
    char *line_str = NULL;
    char *message = NULL;
